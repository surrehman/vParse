#!/usr/bin/python
#------------------------------------------------------------------------------
# gen_header: Generate and merge header files.
# notes:      This scripts reads exsisting header files and keeps definitions
#             before a certain mark. Code after the mark is re-generated by 
#             calling cextract. 
#             Secondly, it also generates a header file (build.h) in which the 
#             char variable buildTime is defined.
# usage:
# gen_header input_file.c
#------------------------------------------------------------------------------
import sys, os, time
mark = "/* Autogenerated section starts here */"
build_mark='/* global build variables */'
code_file=sys.argv[1]
header_file=code_file.replace('.c','.h')
fp=open(header_file,'r')
nf=''
while(1):
    line=fp.readline()
    if not(line): break
    if line.strip() != mark and line.strip() != build_mark:
        nf+=line
    if line.strip() == mark:
        nf+=line
        break

nf+= '\n'
fp.close()
fp=open(header_file,'w')
fp.write(nf)
fp.flush()
fp.close()
print "executing " + 'cextract ' + code_file + ' >> ' + header_file
os.system('cextract -E ' + code_file + ' >> ' + header_file)
# generate build.h
fp=open("build.h",'w')
buildHeaderString="""/* build.h: Auto-generated header file containing info
related to tool versions and build information 

This file is overwritten every time the gen_header script is called */

%s 
"""%('char buildTime[256]={"%s"};\n' %(time.ctime()))
fp.write(buildHeaderString);fp.close()
